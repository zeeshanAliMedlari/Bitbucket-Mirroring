name: Mirror Bitbucket Repository to GitHub

on:
  schedule:
    # Run daily at midnight (UTC) to keep GitHub repos up-to-date
    - cron: '0 0 * * *'
  workflow_dispatch:
    # Allow manual trigger of the workflow

jobs:
  mirror-repository:
    runs-on: ubuntu-latest

    env:
      BITBUCKET_USERNAME: ${{ secrets.BITBUCKET_USERNAME }}
      BITBUCKET_APP_PASSWORD: ${{ secrets.BITBUCKET_APP_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # Step 1: Checkout a temporary workspace for mirroring
      - name: Checkout GitHub Workspace
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      # Step 2: Clone the Bitbucket repository
      - name: Clone Bitbucket Repository
        run: |
          git clone --mirror https://$BITBUCKET_USERNAME:$BITBUCKET_APP_PASSWORD@bitbucket.org/<bitbucket_workspace>/<bitbucket_repo>.git bitbucket-mirror

      # Step 3: Push mirrored content to GitHub
      - name: Push to GitHub
        run: |
          cd bitbucket-mirror
          git remote add github https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/<github_org>/<github_repo>.git
          git push --mirror github

      # Step 4: Configure branch rules on GitHub (if needed)
      - name: Configure Branch Rules
        uses: actions/github-script@v6
        with:
          script: |
            const { context, github } = require("@actions/github");

            const owner = "<github_org>";
            const repo = "<github_repo>";
            const branch = "main";

            const branchProtection = {
              required_status_checks: {
                strict: true,
                contexts: ["ci-build", "code-review"]
              },
              enforce_admins: true,
              required_pull_request_reviews: {
                required_approving_review_count: 2
              },
              restrictions: null
            };

            await github.rest.repos.updateBranchProtection({
              owner,
              repo,
              branch,
              ...branchProtection
            });

      # Step 5: Configure Repository Webhooks (optional)
      - name: Add Repository Webhooks
        uses: actions/github-script@v6
        with:
          script: |
            const { context, github } = require("@actions/github");

            await github.rest.repos.createWebhook({
              owner: "<github_org>",
              repo: "<github_repo>",
              config: {
                url: "https://example.com/webhook-endpoint",
                content_type: "json",
                secret: "${{ secrets.WEBHOOK_SECRET }}",
                insecure_ssl: "0"
              },
              events: ["push", "pull_request"],
              active: true
            });
